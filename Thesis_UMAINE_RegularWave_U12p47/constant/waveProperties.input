/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      environmentalProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

seaLevel	0.00;

// A list of the relaxation zones in the simulation. The parameters are given
// in <name>Coeffs below.
relaxationNames (inlet outlet);

initializationName inlet;
externalForcing oceanWave3D;


externalForcingCoeffs
{
    waveType oceanWave3D;

    // Define the intervals for the OpenFoam calculations
    nIntervals 1;
    startTimes nonuniform List<scalar> 1(0);
    endTimes nonuniform List<scalar> 1(700);

    // Should the interval be ramped?
    rampInterval on;
    Tsoft	10;
    // Name of the sub-dictionary (without Coeffs), where the externalSource
    // definition is given. Is needed, when the mapping OCW3D->OpenFoam is
    // carried out.
    mappingZone inlet;

    translateOpenFoamMesh (750 122 0);
};

inletCoeffs
{
    waveType externalSource;
    
    relaxationZone
    {
        relaxationScheme Spatial;
        relaxationShape  Rectangular;
    
        relaxType   INLET;
        startX      (-200 -110 0);
        endX        (-100 110 0);
        orientation      (1.0 0.0 0.0);
    }
};
// Enable or disable relaxation via passive or OW3D solution

outletCoeffs
{
    waveType externalSource;

    relaxationZone
    {
        relaxationScheme Spatial;
        relaxationShape  Rectangular;

        relaxType   OUTLET;
        startX      (100 -110 0);
        endX        (200 110 0);
        orientation      (1.0 0.0 0.0);
    }
};






// ************************************************************************* //
